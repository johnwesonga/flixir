services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: flixir_prod
      POSTGRES_USER: flixir
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flixir -d flixir_prod"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - flixir_network

  # Flixir Phoenix Application
  flixir:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # Database Configuration
      DATABASE_URL: "flixir://postgres:${POSTGRES_PASSWORD:-changeme}@postgres:5432/flixir_prod"
      POOL_SIZE: "10"
      
      # Phoenix Configuration
      PHX_SERVER: "true"
      PHX_HOST: "${PHX_HOST:-localhost}"
      PORT: "4000"
      SECRET_KEY_BASE: "${SECRET_KEY_BASE}"
      
      # Session Configuration
      SESSION_MAX_AGE: "86400"
      SESSION_CLEANUP_INTERVAL: "3600"
      SESSION_MAX_IDLE: "7200"
      
      # TMDB API Configuration
      TMDB_API_KEY: "${TMDB_API_KEY}"
      TMDB_BASE_URL: "https://api.themoviedb.org/3"
      TMDB_IMAGE_BASE_URL: "https://image.tmdb.org/t/p/w500"
      TMDB_TIMEOUT: "5000"
      TMDB_MAX_RETRIES: "3"
      TMDB_REDIRECT_URL: "${TMDB_REDIRECT_URL:-http://localhost:4000/auth/callback}"
      TMDB_SESSION_TIMEOUT: "86400"
      
      # Cache Configuration
      SEARCH_CACHE_TTL: "300"
      SEARCH_CACHE_MAX_ENTRIES: "1000"
      SEARCH_CACHE_CLEANUP_INTERVAL: "60000"
      
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - flixir_network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - flixir
    restart: unless-stopped
    networks:
      - flixir_network
    profiles:
      - production

volumes:
  postgres_data:

networks:
  flixir_network:
    driver: bridge